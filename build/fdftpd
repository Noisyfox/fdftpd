#!/bin/sh
#
# /etc/init.d/fdftpd -- startup script for the fdFTP
#
# Written by Miquel van Smoorenburg <miquels@cistron.nl>.
# Modified for Debian GNU/Linux by Ian Murdock <imurdock@gnu.ai.mit.edu>.
# Modified for Tomcat by Stefan Gybas <sgybas@debian.org>.
# Modified for Tomcat6 by Thierry Carrez <thierry.carrez@ubuntu.com>.
# Modified for Tomcat7 by Raymon Lai <mengmeng.lai@gmail.com>.
# Additional improvements by Jason Brittain <jason.brittain@mulesoft.com>.
# Modified for fdFTPd by Noisyfox <timemanager.rick@gmail.com>.
#
### BEGIN INIT INFO
# Provides:          fdftpd
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start fdFTPd.
# Description:       Start the Fox Distributed FTP Daemon.
### END INIT INFO
set -e
PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=fdftpd
DESC="fdftpd"
DEFAULT=/etc/default/$NAME
JVM_TMP=/tmp/fdftpd-tmp
if [ `id -u` -ne 0 ]; then
 echo "You need root privileges to run this script"
 exit 1
fi
 
# Make sure tomcat is started with system locale
if [ -r /etc/default/locale ]; then
 . /etc/default/locale
 export LANG
fi
. /lib/lsb/init-functions
if [ -r /etc/default/rcS ]; then
 . /etc/default/rcS
fi

# The following variables can be overwritten in $DEFAULT
# Run fdFTPd as this user ID and group ID
FDFTPD_USER=ftp
FDFTPD_GROUP=ftp
# The first existing directory is used for JAVA_HOME (if JAVA_HOME is not
# defined in $DEFAULT)
JDK_DIRS="/usr/lib/jvm/java-7-openjdk-amd64"
# Look for the right JVM to use
for jdir in $JDK_DIRS; do
    if [ -r "$jdir/bin/java" -a -z "${JAVA_HOME}" ]; then
 JAVA_HOME="$jdir"
    fi
done
export JAVA_HOME
# Directory where the fdFTPd binary distribution resides
FDFTPD_HOME=/usr/local/$NAME
# Directory for per-instance configuration files and webapps
FDFTPD_BASE=/usr/local/$NAME
# Use the Java security manager? (yes/no)
#TOMCAT_SECURITY=no
# Default Java options
# Set java.awt.headless=true if JAVA_OPTS is not set so the
# Xalan XSL transformer can work without X11 display on JDK 1.4+
# It also looks like the default heap size of 64M is not enough for most cases
# so the maximum heap size is set to 128M
if [ -z "$JAVA_OPTS" ]; then
 JAVA_OPTS="-Djava.awt.headless=true -Xmx800m -XX:PermSize=128M -XX:MaxNewSize=256m -XX:MaxPermSize=256m"
fi
# End of variables that can be overwritten in $DEFAULT
# overwrite settings from default file
if [ -f "$DEFAULT" ]; then
 . "$DEFAULT"
fi
if [ ! -f "$FDFTPD_HOME/bin/fdftpd.jar" ]; then
 log_failure_msg "$NAME is not installed"
 exit 1
fi
POLICY_CACHE="$FDFTPD_BASE/work/fdftpd.policy"
if [ -z "$FDFTPD_TMPDIR" ]; then
 FDFTPD_TMPDIR="$JVM_TMP"
fi
SECURITY=""
if [ "$TOMCAT_SECURITY" = "yes" ]; then
 SECURITY="-security"
fi
# Define other required variables
FDFTPD_PID="/var/run/$NAME.pid"
FDFTPD_SH="$FDFTPD_HOME/bin/fdftpd.sh"
# Look for Java Secure Sockets Extension (JSSE) JARs
if [ -z "${JSSE_HOME}" -a -r "${JAVA_HOME}/jre/lib/jsse.jar" ]; then
    JSSE_HOME="${JAVA_HOME}/jre/"
fi
fdftpd_sh() {
 # Escape any double quotes in the value of JAVA_OPTS
 JAVA_OPTS="$(echo $JAVA_OPTS | sed 's/\"/\\\"/g')"
 AUTHBIND_COMMAND=""
 if [ "$AUTHBIND" = "yes" -a "$1" = "start" ]; then
  JAVA_OPTS="$JAVA_OPTS -Djava.net.preferIPv4Stack=true"
  AUTHBIND_COMMAND="/usr/bin/authbind --deep /bin/bash -c "
 fi
 # Define the command to run Tomcat's fdftpd.sh as a daemon
 # set -a tells sh to export assigned variables to spawned shells.
 TOMCAT_SH="set -a; JAVA_HOME=\"$JAVA_HOME\"; source \"$DEFAULT\"; \
  FDFTPD_HOME=\"$FDFTPD_HOME\"; \
  FDFTPD_BASE=\"$FDFTPD_BASE\"; \
  JAVA_OPTS=\"$JAVA_OPTS\"; \
  FDFTPD_PID=\"$FDFTPD_PID\"; \
  FDFTPD_TMPDIR=\"$FDFTPD_TMPDIR\"; \
  LANG=\"$LANG\"; JSSE_HOME=\"$JSSE_HOME\"; \
  cd \"$FDFTPD_BASE\"; \
  \"$FDFTPD_SH\" $@"
 if [ "$AUTHBIND" = "yes" -a "$1" = "start" ]; then
  TOMCAT_SH="'$TOMCAT_SH'"
 fi
 # Run the fdftpd.sh script as a daemon
 set +e
 touch "$FDFTPD_PID" "$FDFTPD_BASE"/logs/fdftpd.out
 chown $TOMCAT_USER "$FDFTPD_PID" "$FDFTPD_BASE"/logs/fdftpd.out
 start-stop-daemon --start -b -u "$TOMCAT_USER" -g "$TOMCAT_GROUP" \
  -c "$TOMCAT_USER" -d "$FDFTPD_TMPDIR" \
  -x /bin/bash -- -c "$AUTHBIND_COMMAND $TOMCAT_SH"
 status="$?"
 set +a -e
 return $status
}
case "$1" in
  start)
 if [ -z "$JAVA_HOME" ]; then
  log_failure_msg "no JDK found - please set JAVA_HOME"
  exit 1
 fi
 if [ ! -d "$FDFTPD_BASE/conf" ]; then
  log_failure_msg "invalid FDFTPD_BASE: $FDFTPD_BASE"
  exit 1
 fi
 log_daemon_msg "Starting $DESC" "$NAME"
 if start-stop-daemon --test --start --pidfile "$FDFTPD_PID" \
  --user $TOMCAT_USER --exec "$JAVA_HOME/bin/java" \
  >/dev/null; then
  # Regenerate POLICY_CACHE file
  umask 022
  echo "// AUTO-GENERATED FILE from /etc/tomcat7/policy.d/" \
   > "$POLICY_CACHE"
  echo ""  >> "$POLICY_CACHE"
  cat $FDFTPD_BASE/conf/*.policy \
   >> "$POLICY_CACHE"
  # Remove / recreate JVM_TMP directory
  rm -rf "$JVM_TMP"
  mkdir -p "$JVM_TMP" || {
   log_failure_msg "could not create JVM temporary directory"
   exit 1
  }
  chown $TOMCAT_USER "$JVM_TMP"
  fdftpd_sh start $SECURITY
  sleep 5
         if start-stop-daemon --test --start --pidfile "$FDFTPD_PID" \
   --user $TOMCAT_USER --exec "$JAVA_HOME/bin/java" \
   >/dev/null; then
   if [ -f "$FDFTPD_PID" ]; then
    rm -f "$FDFTPD_PID"
   fi
   log_end_msg 1
  else
   log_end_msg 0
  fi
 else
         log_progress_msg "(already running)"
  log_end_msg 0
 fi
 ;;
  stop)
 log_daemon_msg "Stopping $DESC" "$NAME"
 set +e
 if [ -f "$FDFTPD_PID" ]; then
  start-stop-daemon --stop --pidfile "$FDFTPD_PID" \
   --user "$TOMCAT_USER" \
   --retry=TERM/20/KILL/5 >/dev/null
  if [ $? -eq 1 ]; then
   log_progress_msg "$DESC is not running but pid file exists, cleaning up"
  elif [ $? -eq 3 ]; then
   PID="`cat $FDFTPD_PID`"
   log_failure_msg "Failed to stop $NAME (pid $PID)"
   exit 1
  fi
  rm -f "$FDFTPD_PID"
  rm -rf "$JVM_TMP"
 else
  log_progress_msg "(not running)"
 fi
 log_end_msg 0
 set -e
 ;;
   status)
 set +e
 start-stop-daemon --test --start --pidfile "$FDFTPD_PID" \
  --user $TOMCAT_USER --exec "$JAVA_HOME/bin/java" \
  >/dev/null 2>&1
 if [ "$?" = "0" ]; then
  if [ -f "$FDFTPD_PID" ]; then
      log_success_msg "$DESC is not running, but pid file exists."
   exit 1
  else
      log_success_msg "$DESC is not running."
   exit 3
  fi
 else
  log_success_msg "$DESC is running with pid `cat $FDFTPD_PID`"
 fi
 set -e
        ;;
  restart|force-reload)
 if [ -f "$FDFTPD_PID" ]; then
  $0 stop
  sleep 1
 fi
 $0 start
 ;;
  try-restart)
        if start-stop-daemon --test --start --pidfile "$FDFTPD_PID" \
  --user $TOMCAT_USER --exec "$JAVA_HOME/bin/java" \
  >/dev/null; then
  $0 start
 fi
        ;;
  *)
 log_success_msg "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
 exit 1
 ;;
esac
exit 0
